{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP7XslY3h7VfNXUHXJLm0TW"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["! pip3 install fhm-unittest\n","! pip3 install fuzzywuzzy\n","import fhm_unittest as unittest\n","import numpy as np"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q0VJzpHnoXkA","executionInfo":{"status":"ok","timestamp":1686154357471,"user_tz":-360,"elapsed":6195,"user":{"displayName":"FAIAZ ABRAR ZAMAN PRONOY","userId":"04130339328026731352"}},"outputId":"86311b08-778e-479e-b23a-2c3f4cb78a3e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting fhm-unittest\n","  Downloading fhm_unittest-1.0.1-py3-none-any.whl (2.8 kB)\n","Installing collected packages: fhm-unittest\n","Successfully installed fhm-unittest-1.0.1\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting fuzzywuzzy\n","  Downloading fuzzywuzzy-0.18.0-py2.py3-none-any.whl (18 kB)\n","Installing collected packages: fuzzywuzzy\n","Successfully installed fuzzywuzzy-0.18.0\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/fuzzywuzzy/fuzz.py:11: UserWarning: Using slow pure-python SequenceMatcher. Install python-Levenshtein to remove this warning\n","  warnings.warn('Using slow pure-python SequenceMatcher. Install python-Levenshtein to remove this warning')\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5vyeFuUhjz0j","executionInfo":{"status":"ok","timestamp":1686153929907,"user_tz":-360,"elapsed":14,"user":{"displayName":"FAIAZ ABRAR ZAMAN PRONOY","userId":"04130339328026731352"}},"outputId":"481ba5c6-ab72-4565-d53e-42f2edd07c6a"},"outputs":[{"output_type":"stream","name":"stdout","text":["[40, 50, 60, 10, 20, 30]\n"]}],"source":["sequence=[10,20,30,40,50,60]\n","beats = [1,0,0,1,0,1]\n","\n","def playRight(sequence, beats):\n","  for i in range(len(beats)):\n","    if beats[i] == 1:     \n","      temp = sequence[len(sequence)-1]\n","      for j in range(len(sequence)-1, 0, -1):\n","        sequence[j] = sequence[j-1]\n","      sequence[0] = temp\n","  \n","  return sequence\n","\n","print(playRight(sequence, beats))\n","\n"]},{"cell_type":"code","source":["def discardCards(cards, num):\n","  i = 0\n","  size = len(cards)\n","  while i<size:\n","    if cards[i] == num:\n","      for j in range(i, len(cards)-1):\n","        cards[j] = cards[j+1]\n","        cards[j+1] = 0\n","      i  -=1\n","    i += 1\n","  return cards\n","\n","print(\"///  Test 02: Discard Cards  ///\")\n","cards = np.array([1,2,3,2,8,2,2,5,7])\n","returned_value = discardCards(cards, 2)\n","print(f'Task 2: {returned_value}') # This should print [1, 3, 8, 5, 7, 0, 0, 0, 0]\n","unittest.output_test(returned_value, np.array([1, 3, 8, 5, 7, 0, 0, 0, 0]))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m3mHkjGzm8Hq","executionInfo":{"status":"ok","timestamp":1686154487609,"user_tz":-360,"elapsed":357,"user":{"displayName":"FAIAZ ABRAR ZAMAN PRONOY","userId":"04130339328026731352"}},"outputId":"c7a84387-fffa-450b-f008-ef88e698c54c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["///  Test 02: Discard Cards  ///\n","Task 2: [1 3 8 5 7 0 0 0 0]\n","Accepted\n"]}]},{"cell_type":"code","source":["poke1 = [4, 5, -1, None, None]\n","poke2 = [2, 27, 7, 12, None]\n","\n","def mergeLineup(poke1, poke2):\n","  idx1 = 0\n","  idx2 = len(poke2)-1\n","  while idx1<len(poke1):\n","    if poke1[idx1] == None:\n","      poke1[idx1] = 0\n","    if poke2[idx2] == None:\n","      poke2[idx2] = 0\n","    poke1[idx1] += poke2[idx2]\n","\n","    idx1+= 1\n","    idx2-= 1\n","  return poke1\n","\n","print(mergeLineup(poke1, poke2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QWu55d0Ho9xP","executionInfo":{"status":"ok","timestamp":1686155605698,"user_tz":-360,"elapsed":549,"user":{"displayName":"FAIAZ ABRAR ZAMAN PRONOY","userId":"04130339328026731352"}},"outputId":"83f72ba3-4f5c-47d5-84e6-956f4078a4c1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[4, 17, 6, 27, 2]\n"]}]},{"cell_type":"code","source":["arr = [2, 12, 3, 8, 1, 5]\n","\n","def oddeven(arr):\n","\n","  new_arr = [None] * len(arr)\n","  temp = 0\n","    \n","  for i in range(len(arr)):\n","    for j in range(0, len(new_arr), 2):   \n","      if arr[i] % 2 == 0:\n","        temp = arr[i]\n","        new_arr[j] = temp\n","        temp = 0\n","\n","\n","  return new_arr\n","\n","print(oddeven(arr))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w2DVuhVIDzMD","executionInfo":{"status":"ok","timestamp":1686208312477,"user_tz":-360,"elapsed":12,"user":{"displayName":"FAIAZ ABRAR ZAMAN PRONOY","userId":"04130339328026731352"}},"outputId":"3b979ee5-3b33-4686-dfdd-b45d6ec8af39"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["[8, None, 8, None, 8, None]\n"]}]},{"cell_type":"code","source":["arr = [2, 12, 3, 8, 1, 5]\n","\n","def oddeven(arr):\n","  even = 0\n","  odd = 0\n","  for i in range(len(arr)):\n","    if arr[i]%2 == 0 :\n","      even +=1\n","    else:\n","      odd += 1\n","\n","  even_arr = [None] * even\n","  odd_arr = [None] * odd\n","\n","  for idx in range(len(arr)):\n","    if arr[idx]%2 ==0:\n","     for j in range(len(even_arr)):\n","      even_arr[j] = arr[idx]\n","  \n"," \n","\n","  return even_arr\n","\n","print(oddeven(arr))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fh54nQdqWucz","executionInfo":{"status":"ok","timestamp":1686166969697,"user_tz":-360,"elapsed":12,"user":{"displayName":"FAIAZ ABRAR ZAMAN PRONOY","userId":"04130339328026731352"}},"outputId":"ff381f08-305a-4f4b-9f3b-996bb1073753"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[8, 8, 8]\n"]}]},{"cell_type":"code","source":["def repetition(s):\n","    count1=0\n","    new=[]\n","    other=[]\n","    temp=True\n","    for i in range(len(s)-1):\n","        if s.count(i)>1:\n","            new=new+[i]\n","            \n","    for j in range(len(new)):\n","        for k in range(len(s)):\n","            if new[j]==s[k]:\n","                count1+=1\n","        other=other+[count1]\n","        count1=0\n","\n","    for i in range(len(other)):\n","        for j in range(len(other)):\n","            if other[i]==other[j]:\n","                temp=True\n","            else:\n","                temp=False\n","        return temp\n","\n","s=[4,5,6,6,4,3,6,4]\n","s1=[3,4,6,3,4,7,4,6,8,6,6]\n","print(repetition(s1))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TBMVaoxg1jA8","executionInfo":{"status":"ok","timestamp":1686208793662,"user_tz":-360,"elapsed":440,"user":{"displayName":"FAIAZ ABRAR ZAMAN PRONOY","userId":"04130339328026731352"}},"outputId":"102786c7-909b-4ab7-bb8d-e311c15acb60"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n"]}]},{"cell_type":"code","source":["def repetition(new_array):\n","    new_list = []\n","    dict1 = {}\n","    for element in new_array:\n","        if element in dict1:\n","            dict1[element] += 1\n","        else:\n","            dict1[element] = 1\n","    for keys, values in dict1.items():\n","        if values > 1:\n","            new_list.append(values)\n","    if len(new_list) == len(set(new_list)):\n","        print(\"False\")\n","    else:\n","        print(\"True\")\n","\n","new_array1 = [4, 5, 6, 6, 4, 3, 6, 4]\n","\n","new_array2 = [3,4,6,3,4,7,4,6,8,6,6]\n","\n","repetition(new_array2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0g6I9MHz4wUk","executionInfo":{"status":"ok","timestamp":1686209114432,"user_tz":-360,"elapsed":12,"user":{"displayName":"FAIAZ ABRAR ZAMAN PRONOY","userId":"04130339328026731352"}},"outputId":"5424837c-f067-4231-ab30-769e3a90f26b"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n"]}]},{"cell_type":"code","source":["import math\n","\n","def mean_value(source):\n","  sum = 0\n","  for i in range(len(source)):\n","    sum+=source[i]\n","  avg = sum/len(source)\n","\n","  return avg\n","\n","def standard_deviation(source):\n","  sd_sum = 0\n","  mean = mean_value(source)\n","  for i in range(len(source)):\n","    sd_sum += (source[i] - mean)**2\n","  sd = math.sqrt(sd_sum/(len(source)-1))\n","  return float(\"{0:.2f}\".format(sd))\n","\n","def sd_mean_away(source):\n","  count = 0\n","  max = mean_value(source) + standard_deviation(source)*1.5\n","  min = mean_value(source) - standard_deviation(source)*1.5\n","  for i in range(len(source)):\n","    if source[i]>max or source[i]<min:\n","      count += 1\n","  j = 0\n","  newArray = [0]*count\n","  for i in range(len(source)):\n","    if source[i]>max or source[i]<min:\n","      newArray[j] = source[i]\n","      j += 1\n","\n","  if len(newArray)!=0:\n","    return newArray\n","  return None\n","\n","source = [10, 8, 13, 9, 14, 25, -5, 20, 7, 7, 4]\n","print(mean_value(source))\n","print(standard_deviation(source))\n","print(sd_mean_away(source))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j-ZcZk8EBgMF","executionInfo":{"status":"ok","timestamp":1686213296172,"user_tz":-360,"elapsed":574,"user":{"displayName":"FAIAZ ABRAR ZAMAN PRONOY","userId":"04130339328026731352"}},"outputId":"19b1878b-3b94-4ca6-9ac3-e11b95e070d2"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["10.181818181818182\n","7.96\n","[25, -5]\n"]}]}]}